/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.5.1/userguide/java_library_plugin.html
 */

buildscript {

    repositories {
    mavenCentral()
    maven {
      url 'https://plugins.gradle.org/m2/'
      url 'https://repo.spring.io/libs-snapshot'
     }
  }

  dependencies {
    classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.9.2'
    classpath 'se.transmode.gradle:gradle-docker:1.2' 
  }
  apply from: 'gradle/base.gradle'
}

plugins {
  id 'org.asciidoctor.convert' version '1.5.3'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'

description = 'qualibrate-java-api'

def javaVersion = JavaVersion.VERSION_1_8
sourceCompatibility = javaVersion
targetCompatibility = javaVersion

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

ext {
        snippetsDir = file('build/generated-snippets')
        artifactId = "${rootProject.name}"
        springBootVersion = "${springBootVersion}"
        buildNumber = System.env.CI_BUILD_ID ?: '0'
        buildId = System.env.CI_BUILD_REF ? System.env.CI_BUILD_REF[0..7] : System.properties['user.name']
}

group = 'com.cs'
version = version + ".$buildNumber"
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven {
      url 'https://plugins.gradle.org/m2/'
      url 'https://repo.spring.io/libs-snapshot'
    }
}


dependencies {
  compile 'org.apache.httpcomponents:httpclient:4.5.9'
  compile "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
  compile "org.springframework.boot:spring-boot-starter-actuator:$springBootVersion"
  compile "org.springframework.boot:spring-boot-starter-security:$springBootVersion"
  compile "org.springframework:spring-context-support:$springVersion"
  compile 'org.springframework.retry:spring-retry:1.1.2.RELEASE'
  compile 'io.springfox:springfox-swagger2:2.4.0'
  compile 'io.springfox:springfox-swagger-ui:2.4.0'
  compileOnly 'org.projectlombok:lombok:1.18.8'
  annotationProcessor 'org.projectlombok:lombok:1.18.8'
  compile 'org.liquibase:liquibase-core:3.6.3'
  compile "org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion"
  compile "org.springframework.cloud:spring-cloud-aws-autoconfigure:$springCloudVersion"
  runtime 'mysql:mysql-connector-java:8.0.11'
  testCompile "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
  testRuntime 'com.h2database:h2:1.4.190'
  testCompile 'org.springframework.restdocs:spring-restdocs-mockmvc:2.0.3.RELEASE'
  testCompile 'org.springframework.restdocs:spring-restdocs-core:2.0.3.RELEASE'
  compile 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.7'
}

jar {
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}") {
        into 'public/docs'
    }
}

task buildDocker (type:Docker, dependsOn: build) {
	applicationName = jar.baseName
	dockerfile = file('Dockerfile')
	doFirst {
		copy {
			from jar
			into stageDir
		}
	}
}

test {
    outputs.dir snippetsDir
    
    testLogging {
        events "passed", "skipped", "failed"
    }
}
